Traceback (most recent call last):
  File "/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/nbclient/client.py", line 1265, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 168, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/anaconda3/envs/ccia/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/nbclient/client.py", line 703, in async_execute
    await self.async_execute_cell(
  File "/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/nbclient/client.py", line 1021, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/nbclient/client.py", line 915, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# initialize array for zeros for synthetic time series
x = np.zeros(T,)

# construct synthetic time series (note the f for the cosine wave is approximate 0.2)
x[0] = beta*np.random.randn()

for j in np.arange(1,T,1):
    x[j] = 0.5*np.cos(j) + 0.75*beta*np.random.randn()

# compute power spectrum (try window = "boxcar" for comparison)
p = sig.welch(x,window='hanning', nperseg=int(T/N))
pave = p[1]

# normalize the spectrum
pave = pave/np.sum(pave)

# calculate significance using F-test
dof = 2*N*1.2
fstat = st.f.ppf(.99,dof,1000)
spec99 = [fstat*m for m in rspec]
    
fstat = st.f.ppf(.95,dof,1000)
spec95 = [fstat*m for m in rspec]
    
# plot power spectrum and red noise spectra
plt.figure(figsize=(7,5))
plt.xlabel('Frequency (cycles per time step)')
plt.ylabel('Normalized Power')
plt.title('# Chunks = 4')
plt.xlim(0,0.5)
plt.plot(freq,pave,'-k', label = 'data')
plt.plot(freq,rspec/np.sum(rspec),'-', label = 'red-noise fit', color = 'blue')
plt.plot(freq,spec99/np.sum(rspec),'--', label = '99% confidence', color = 'red')
plt.plot(freq,spec95/np.sum(rspec),'--', label = '95% confidence', color = 'orange')
plt.legend(frameon = False)
plt.tight_layout()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/windows/_windows.py:2214[0m, in [0;36mget_window[0;34m(window, Nx, fftbins)[0m
[1;32m   2213[0m [38;5;28;01mtry[39;00m:
[0;32m-> 2214[0m     beta [38;5;241m=[39m [38;5;28;43mfloat[39;49m[43m([49m[43mwindow[49m[43m)[49m
[1;32m   2215[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mTypeError[39;00m, [38;5;167;01mValueError[39;00m) [38;5;28;01mas[39;00m e:

[0;31mValueError[0m: could not convert string to float: 'hanning'

During handling of the above exception, another exception occurred:

[0;31mKeyError[0m                                  Traceback (most recent call last)
File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/windows/_windows.py:2232[0m, in [0;36mget_window[0;34m(window, Nx, fftbins)[0m
[1;32m   2231[0m [38;5;28;01mtry[39;00m:
[0;32m-> 2232[0m     winfunc [38;5;241m=[39m [43m_win_equiv[49m[43m[[49m[43mwinstr[49m[43m][49m
[1;32m   2233[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m [38;5;28;01mas[39;00m e:

[0;31mKeyError[0m: 'hanning'

The above exception was the direct cause of the following exception:

[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[21], line 11[0m
[1;32m      8[0m     x[j] [38;5;241m=[39m [38;5;241m0.5[39m[38;5;241m*[39mnp[38;5;241m.[39mcos(j) [38;5;241m+[39m [38;5;241m0.75[39m[38;5;241m*[39mbeta[38;5;241m*[39mnp[38;5;241m.[39mrandom[38;5;241m.[39mrandn()
[1;32m     10[0m [38;5;66;03m# compute power spectrum (try window = "boxcar" for comparison)[39;00m
[0;32m---> 11[0m p [38;5;241m=[39m [43msig[49m[38;5;241;43m.[39;49m[43mwelch[49m[43m([49m[43mx[49m[43m,[49m[43mwindow[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mhanning[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mnperseg[49m[38;5;241;43m=[39;49m[38;5;28;43mint[39;49m[43m([49m[43mT[49m[38;5;241;43m/[39;49m[43mN[49m[43m)[49m[43m)[49m
[1;32m     12[0m pave [38;5;241m=[39m p[[38;5;241m1[39m]
[1;32m     14[0m [38;5;66;03m# normalize the spectrum[39;00m

File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/_spectral_py.py:446[0m, in [0;36mwelch[0;34m(x, fs, window, nperseg, noverlap, nfft, detrend, return_onesided, scaling, axis, average)[0m
[1;32m    289[0m [38;5;28;01mdef[39;00m [38;5;21mwelch[39m(x, fs[38;5;241m=[39m[38;5;241m1.0[39m, window[38;5;241m=[39m[38;5;124m'[39m[38;5;124mhann[39m[38;5;124m'[39m, nperseg[38;5;241m=[39m[38;5;28;01mNone[39;00m, noverlap[38;5;241m=[39m[38;5;28;01mNone[39;00m, nfft[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    290[0m           detrend[38;5;241m=[39m[38;5;124m'[39m[38;5;124mconstant[39m[38;5;124m'[39m, return_onesided[38;5;241m=[39m[38;5;28;01mTrue[39;00m, scaling[38;5;241m=[39m[38;5;124m'[39m[38;5;124mdensity[39m[38;5;124m'[39m,
[1;32m    291[0m           axis[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m, average[38;5;241m=[39m[38;5;124m'[39m[38;5;124mmean[39m[38;5;124m'[39m):
[1;32m    292[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""[39;00m
[1;32m    293[0m [38;5;124;03m    Estimate power spectral density using Welch's method.[39;00m
[1;32m    294[0m 
[0;32m   (...)[0m
[1;32m    444[0m 
[1;32m    445[0m [38;5;124;03m    """[39;00m
[0;32m--> 446[0m     freqs, Pxx [38;5;241m=[39m [43mcsd[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43mx[49m[43m,[49m[43m [49m[43mfs[49m[38;5;241;43m=[39;49m[43mfs[49m[43m,[49m[43m [49m[43mwindow[49m[38;5;241;43m=[39;49m[43mwindow[49m[43m,[49m[43m [49m[43mnperseg[49m[38;5;241;43m=[39;49m[43mnperseg[49m[43m,[49m
[1;32m    447[0m [43m                     [49m[43mnoverlap[49m[38;5;241;43m=[39;49m[43mnoverlap[49m[43m,[49m[43m [49m[43mnfft[49m[38;5;241;43m=[39;49m[43mnfft[49m[43m,[49m[43m [49m[43mdetrend[49m[38;5;241;43m=[39;49m[43mdetrend[49m[43m,[49m
[1;32m    448[0m [43m                     [49m[43mreturn_onesided[49m[38;5;241;43m=[39;49m[43mreturn_onesided[49m[43m,[49m[43m [49m[43mscaling[49m[38;5;241;43m=[39;49m[43mscaling[49m[43m,[49m
[1;32m    449[0m [43m                     [49m[43maxis[49m[38;5;241;43m=[39;49m[43maxis[49m[43m,[49m[43m [49m[43maverage[49m[38;5;241;43m=[39;49m[43maverage[49m[43m)[49m
[1;32m    451[0m     [38;5;28;01mreturn[39;00m freqs, Pxx[38;5;241m.[39mreal

File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/_spectral_py.py:580[0m, in [0;36mcsd[0;34m(x, y, fs, window, nperseg, noverlap, nfft, detrend, return_onesided, scaling, axis, average)[0m
[1;32m    454[0m [38;5;28;01mdef[39;00m [38;5;21mcsd[39m(x, y, fs[38;5;241m=[39m[38;5;241m1.0[39m, window[38;5;241m=[39m[38;5;124m'[39m[38;5;124mhann[39m[38;5;124m'[39m, nperseg[38;5;241m=[39m[38;5;28;01mNone[39;00m, noverlap[38;5;241m=[39m[38;5;28;01mNone[39;00m, nfft[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    455[0m         detrend[38;5;241m=[39m[38;5;124m'[39m[38;5;124mconstant[39m[38;5;124m'[39m, return_onesided[38;5;241m=[39m[38;5;28;01mTrue[39;00m, scaling[38;5;241m=[39m[38;5;124m'[39m[38;5;124mdensity[39m[38;5;124m'[39m,
[1;32m    456[0m         axis[38;5;241m=[39m[38;5;241m-[39m[38;5;241m1[39m, average[38;5;241m=[39m[38;5;124m'[39m[38;5;124mmean[39m[38;5;124m'[39m):
[1;32m    457[0m [38;5;250m    [39m[38;5;124mr[39m[38;5;124;03m"""[39;00m
[1;32m    458[0m [38;5;124;03m    Estimate the cross power spectral density, Pxy, using Welch's method.[39;00m
[1;32m    459[0m 
[0;32m   (...)[0m
[1;32m    578[0m 
[1;32m    579[0m [38;5;124;03m    """[39;00m
[0;32m--> 580[0m     freqs, _, Pxy [38;5;241m=[39m [43m_spectral_helper[49m[43m([49m[43mx[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43mfs[49m[43m,[49m[43m [49m[43mwindow[49m[43m,[49m[43m [49m[43mnperseg[49m[43m,[49m[43m [49m[43mnoverlap[49m[43m,[49m[43m [49m[43mnfft[49m[43m,[49m
[1;32m    581[0m [43m                                     [49m[43mdetrend[49m[43m,[49m[43m [49m[43mreturn_onesided[49m[43m,[49m[43m [49m[43mscaling[49m[43m,[49m[43m [49m[43maxis[49m[43m,[49m
[1;32m    582[0m [43m                                     [49m[43mmode[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mpsd[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m    584[0m     [38;5;66;03m# Average over windows.[39;00m
[1;32m    585[0m     [38;5;28;01mif[39;00m [38;5;28mlen[39m(Pxy[38;5;241m.[39mshape) [38;5;241m>[39m[38;5;241m=[39m [38;5;241m2[39m [38;5;129;01mand[39;00m Pxy[38;5;241m.[39msize [38;5;241m>[39m [38;5;241m0[39m:

File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/_spectral_py.py:1780[0m, in [0;36m_spectral_helper[0;34m(x, y, fs, window, nperseg, noverlap, nfft, detrend, return_onesided, scaling, axis, mode, boundary, padded)[0m
[1;32m   1777[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m'[39m[38;5;124mnperseg must be a positive integer[39m[38;5;124m'[39m)
[1;32m   1779[0m [38;5;66;03m# parse window; if array like, then set nperseg = win.shape[39;00m
[0;32m-> 1780[0m win, nperseg [38;5;241m=[39m [43m_triage_segments[49m[43m([49m[43mwindow[49m[43m,[49m[43m [49m[43mnperseg[49m[43m,[49m[43m [49m[43minput_length[49m[38;5;241;43m=[39;49m[43mx[49m[38;5;241;43m.[39;49m[43mshape[49m[43m[[49m[38;5;241;43m-[39;49m[38;5;241;43m1[39;49m[43m][49m[43m)[49m
[1;32m   1782[0m [38;5;28;01mif[39;00m nfft [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1783[0m     nfft [38;5;241m=[39m nperseg

File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/_spectral_py.py:2003[0m, in [0;36m_triage_segments[0;34m(window, nperseg, input_length)[0m
[1;32m   1999[0m         warnings[38;5;241m.[39mwarn([38;5;124m'[39m[38;5;124mnperseg = [39m[38;5;132;01m{0:d}[39;00m[38;5;124m is greater than input length [39m[38;5;124m'[39m
[1;32m   2000[0m                       [38;5;124m'[39m[38;5;124m = [39m[38;5;132;01m{1:d}[39;00m[38;5;124m, using nperseg = [39m[38;5;132;01m{1:d}[39;00m[38;5;124m'[39m
[1;32m   2001[0m                       [38;5;241m.[39mformat(nperseg, input_length))
[1;32m   2002[0m         nperseg [38;5;241m=[39m input_length
[0;32m-> 2003[0m     win [38;5;241m=[39m [43mget_window[49m[43m([49m[43mwindow[49m[43m,[49m[43m [49m[43mnperseg[49m[43m)[49m
[1;32m   2004[0m [38;5;28;01melse[39;00m:
[1;32m   2005[0m     win [38;5;241m=[39m np[38;5;241m.[39masarray(window)

File [0;32m/opt/anaconda3/envs/ccia/lib/python3.10/site-packages/scipy/signal/windows/_windows.py:2234[0m, in [0;36mget_window[0;34m(window, Nx, fftbins)[0m
[1;32m   2232[0m     winfunc [38;5;241m=[39m _win_equiv[winstr]
[1;32m   2233[0m [38;5;28;01mexcept[39;00m [38;5;167;01mKeyError[39;00m [38;5;28;01mas[39;00m e:
[0;32m-> 2234[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([38;5;124m"[39m[38;5;124mUnknown window type.[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[1;32m   2236[0m [38;5;28;01mif[39;00m winfunc [38;5;129;01mis[39;00m dpss:
[1;32m   2237[0m     params [38;5;241m=[39m (Nx,) [38;5;241m+[39m args [38;5;241m+[39m ([38;5;28;01mNone[39;00m,)

[0;31mValueError[0m: Unknown window type.
ValueError: Unknown window type.

